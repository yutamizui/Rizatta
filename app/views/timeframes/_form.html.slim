div.row
  div class="col-md-4 select"
    div class="form-group"
      label = t('activerecord.attributes.timeframe.name')
      = f.text_field :name, autofocus: 'true', class:"form-control"
  
  div class="col-md-2 select target_data"
    div class="form-group"
      label = t('activerecord.attributes.timeframe.target_date')
      div class='form-group'
        = f.text_field :target_date, default: "#{@timeframe.target_date}", class:"form-control datepicker"

  div class="col-md-2 select target_data"
    div class="form-group timeframe_start_time"
      label = t('activerecord.attributes.timeframe.start_time')
      br
      = f.time_select :start_time, start_hour: 7, end_hour: 23, minute_step: 5, autofocus: 'true', class:"form-control"

  div class="col-md-2 select target_data"
    div class="form-group timeframe_end_time"
      label = t('activerecord.attributes.timeframe.end_time')
      br
      = f.time_select :end_time, start_hour: 7, end_hour: 23, minute_step: 5, autofocus: 'true', class:"form-control"
br
div class="row"
  div class="col-md-7 select target_data"
    div class="form-group"
      label = t('activerecord.attributes.timeframe.room')
      p = f.collection_select :room_id, @rooms, :id, :name,  {prompt: 1}, {class: "form-control select-box"}

  div class="col-md-2 select"
    div class="form-group"
      label = t('activerecord.attributes.timeframe.capacity')
      div class='input-group-append'
        = f.number_field :capacity, autofocus: 'true', class:"form-control"
        span class="input-group-text" 人

br
div class="row"
  div class="col-md-5"
    div class="form-group"
      label = t('activerecord.attributes.timeframe.color')
      = f.select :color, (Colorlist.all.map {|c| [c.name, c.id, {'code' => c.code }]}), {}, {id: 'color_select', class: "form-control select-box"}
  div class="col-md-2"
    div#output
br

javascript:
  jQuery(function(){
    var current_bg = '#{@timeframe.color}';
     if (current_bg == "" || current_bg == 1){
        var current_bg = "#B22222"
      } else if (current_bg == 2){
        var current_bg = "#1E90FF"
      } else if (current_bg == 3){
        var current_bg = "#228B22"
      } else if (current_bg == 4) {// Yellow
        var current_bg = "#FFD700" 
      } else if (current_bg == 5) {
        var current_bg = "#FFA500"
      } else if (current_bg == 6) {
        var current_bg = "#EE82EE"
      } else if (current_bg == 7) {
        var current_bg = "#808080"
      } else if (current_bg == 8) {
        var current_bg = "#A0522D"
      }
    $(`#output`).css('background-color', current_bg);
   
    $('#color_select').change(function(){
      var r = $('#color_select option:selected').val();
      if (r == 1){
        var bg = "#B22222"
      } else if (r == 2){
        var bg = "#1E90FF"
      } else if (r == 3){
        var bg = "#228B22"
      } else if (r == 4) {// Yellow
        var bg = "#FFD700" 
      } else if (r == 5) {
        var bg = "#FFA500"
      } else if (r == 6) {
        var bg = "#EE82EE"
      } else if (r == 7) {
        var bg = "#808080"
      } else if (r == 8) {
        var bg = "#A0522D"
      }
      $(`#output`).css('background-color', bg);
    })
  })

  $('.datepicker').datepicker({
    format: 'yyyy/mm/dd',
  });

  var page_type = #{raw @page_type.to_json};
  if (page_type == "new") {
    var today = new Date();
    var year = today.getFullYear();
    var month = today.getMonth() + 1;
    var day = today.getDate();
    $('.datepicker').datepicker('update', '&{year}/$(month)/&{day}');
  } else if (page_type == "edit") {
    var d = #{raw @timeframe.target_date.to_json};
    t = (new Date(d));
    var e_year = t.getFullYear();
    var e_month = t.getMonth() + 1;
    var e_day = t.getDate();
    var date = e_year + "/" + e_month + "/" + e_day
    $('.datepicker').datepicker('update', date);
  }

  var timeframes = #{raw @target_timeframes.to_json};
  var current_selected_date= "";
  var current_start_time = "";
  var current_end_time = "";
  var current_room_id = "";
  var target = $('#timeframe_target_date, #timeframe_start_time_4i, #timeframe_start_time_5i,#timeframe_end_time_4i, #timeframe_end_time_5i, #timeframe_room_id ');


  $('#timeframe_target_date').on({
    changeDate:
      function(obj) {
        var selected_year = obj.date.getFullYear();
        var selected_month = obj.date.getMonth() + 1;
        var selected_day = obj.date.getDate();
        var selected_date = (selected_year + "/" + ('0' + selected_month).slice(-2) + "/" + selected_day);
        current_selected_date = selected_date;
        judge();
      }
  });

  $('.timeframe_start_time').change(function(){
    var start_hour = $('#timeframe_start_time_4i').val(); 
    var start_min = $('#timeframe_start_time_5i') .val();
    var start_time = start_hour + ":" + start_min;
    current_start_time = start_time;
    judge();
  });

  $('.timeframe_end_time').change(function(){
    var end_hour = $('#timeframe_end_time_4i').val();
    var end_min = $('#timeframe_end_time_5i') .val();
    var end_time = end_hour + ":" + end_min;
    current_end_time = end_time;
    judge();
  });

  $('#timeframe_room_id').change(function(){
    num = this.selectedIndex;
    room_id = this.options[num].value;   //ルームのIDを取得
    current_rooom_id = room_id;
    judge();
  });

  function judge(){
    for(var i = 0; i < timeframes.length; ++i) {
      var prev_timeframe_date = timeframes[i].target_date.split("-")[0] + "-" + timeframes[i].target_date.split("-")[1] + "-" + timeframes[i].target_date.split("-")[2].match(/.{2}/g)[0];
      var start_hour = new Date(timeframes[i].start_time).getHours();
      var start_min = ("0" + new Date(timeframes[i].start_time).getMinutes()).slice(-2);
      var prev_timeframe_start_time = start_hour + ":" + start_min;
      var end_hour = new Date(timeframes[i].end_time).getHours();
      var end_min = ("0" + new Date(timeframes[i].end_time).getMinutes()).slice(-2);
      var prev_timeframe_end_time = end_hour + ":" + end_min;

      if (current_selected_date.replaceAll("/","-") === prev_timeframe_date && prev_timeframe_start_time <  current_end_time &&  prev_timeframe_end_time > current_start_time ){
        console.log("did");
        alert("同じ時間帯にすでに枠が存在しています");
      };
    }
  }

  
    

   //.where("start_time < ?", end_time).where("end_time > ?", start_time).where.not(id: self.id).where(school_id: self.school_id).present?